rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isLoggedIn() { return request.auth != null; }
    function getRoles() {
      return isLoggedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles
        : [];
    }
    function hasRole(r) { return isLoggedIn() && (r in getRoles()); }
    function isAdmin() { return hasRole('admin'); }
    function isEditor() { return hasRole('editor') || isAdmin(); }

    match /users/{uid} {
      allow read: if isLoggedIn() && request.auth.uid == uid;
      allow write: if isAdmin();
    }

    match /videos/{videoId} {
      allow read: if isLoggedIn();
      allow create, update: if isEditor();
      allow delete: if isAdmin();
    }

    match /jobs/{jobId} {
      allow read: if isLoggedIn();
      allow create, update: if isEditor();
      allow delete: if isAdmin();
    }

    match /channels/{channelId} {
      allow read: if isLoggedIn();
      allow create, update: if isEditor();
      allow delete: if isAdmin();
    }

    match /transcripts/{videoId} {
      allow read: if isLoggedIn();
      allow create, update: if isEditor();
      allow delete: if isAdmin();
    }
  }
}